---
import ThemeToggle from "./ThemeToggle";
---

<ThemeToggle client:load />

<style is:global>
  /* Keep only the parts needed for the theme toggle functionality */
  .theme-transition {
    transition:
      color 0.3s ease,
      background-color 0.3s ease;
  }

  /* Apply transitions to specific elements */
  body,
  .theme-transition {
    transition:
      color 0.3s ease,
      background-color 0.3s ease;
  }

  #themeToggle {
    border: 0;
    background: none;
    color: currentColor; /* Changed from var(--color-text) */
    width: 28px;
    height: 28px;
    padding: 0;
    cursor: pointer;
  }

  #themeToggle svg {
    width: 100%;
    height: 100%;
  }
</style>

<script>
  function getThemePreference(): "light" | "dark" {
    return (
      (localStorage.getItem("theme") as "light" | "dark") ||
      (window.matchMedia("(prefers-color-scheme: dark)").matches
        ? "dark"
        : "light")
    );
  }

  function applyTheme(theme: "light" | "dark") {
    document.documentElement.classList.toggle("dark", theme === "dark");
    localStorage.setItem("theme", theme);
  }

  function toggleTheme() {
    const currentTheme = document.documentElement.classList.contains("dark") ? "dark" : "light";
    const newTheme = currentTheme === "dark" ? "light" : "dark";
    applyTheme(newTheme);
  }

  // Apply theme immediately on script execution
  applyTheme(getThemePreference());

  // Listen for theme toggle events from React component
  window.addEventListener("theme-toggle", toggleTheme);

  // Apply theme on Astro navigation events
  document.addEventListener("astro:after-swap", () => {
    applyTheme(getThemePreference());
  });
</script>
